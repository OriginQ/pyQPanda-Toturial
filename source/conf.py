# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'pyQPanda'
copyright = '2019, OriginQC'
author = 'OriginQC'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = ''

# latex_engine = "xelatex"
# latex_elements = {
#     'papersize': 'a4paper',
#     'utf8extra': '',
#     'inputenc': '',
#     'cmappkg': '',
#     'fontenc': '',
#     'figure_align':'htbp',
#     'preamble': r'''
#         \usepackage[draft]{minted}
#         \fvset{breaklines=true}
#         \usepackage{xeCJK}
#         \parindent 2em
#         \setcounter{tocdepth}{3}
#         \renewcommand\familydefault{\ttdefault}
#         \renewcommand\CJKfamilydefault{\CJKrmdefault}
#         \sphinxtableofcontents
#         'extraclassoptions': 'openany,oneside',
#     ''',
# }
# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.

extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.viewcode',
    # 'rst2pdf.pdfbuilder'
]
# Add any paths that contain templates here, relative to this directory.
templates_path = ['.templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
root_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'Zh_cn'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None
master_doc = 'index'

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['.static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'pyQPandaintroductiondoc'

# -- Options for LaTeX output ------------------------------------------------

# latex_engine = 'xelatex'
# latex_elements = {
#     # The paper size ('letterpaper' or 'a4paper').
#     #
#     # 'papersize': 'letterpaper',

#     # The font size ('10pt', '11pt' or '12pt').
#     #
#     # 'pointsize': '10pt',

#     'fncychap' : '',

#     # Additional stuff for the LaTeX preamble.
#     #
#     'preamble': r'''\usepackage{ctex}
#     ''',

#     # Latex figure (float) alignment
#     #
#     # 'figure_align': 'htbp',
# }

# # Grouping the document tree into LaTeX files. List of tuples
# # (source start file, target name, title,
# #  author, documentclass [howto, manual, or own class]).
# latex_documents = [
#     (root_doc, 'pyQPandaintroduction.tex', 'pyQPanda Introduction ',
#      'OriginQC', 'manual'),
# ]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (root_doc, 'pyQPandaintroduction', 'pyQPanda Introduction',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (root_doc, 'pyQPandaintroduction', 'pyQPanda introduction',
     author, 'pyQPandaintroduction', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']
# pdf_documents = [
#     ('index', u'HanLP Handbook', u'HanLP Handbook', u'hankcs'),
# ]
 
# # A comma-separated list of custom stylesheets. Example:
# pdf_stylesheets = ['a3','zh_CN']
 
# # Create a compressed PDF
# # Use True/False or 1/0
# # Example: compressed=True
# #pdf_compressed = False
 
# # A colon-separated list of folders to search for fonts. Example:
# pdf_font_path = ['C:\\Windows\\Fonts']
 
# Language to be used for hyphenation support
# pdf_language = "zh_CN"
 
# # Mode for literal blocks wider than the frame. Can be
# # overflow, shrink or truncate
# pdf_fit_mode = "shrink"
 
# # Section level that forces a break page.
# # For example: 1 means top-level sections start in a new page
# # 0 means disabled
# #pdf_break_level = 0
 
# # When a section starts in a new page, force it to be 'even', 'odd',
# # or just use 'any'
# #pdf_breakside = 'any'
 
# # Insert footnotes where they are defined instead of
# # at the end.
# #pdf_inline_footnotes = True
 
# # verbosity level. 0 1 or 2
# #pdf_verbosity = 0
 
# # If false, no index is generated.
# #pdf_use_index = True
 
# # If false, no modindex is generated.
# #pdf_use_modindex = True
 
# # If false, no coverpage is generated.
# #pdf_use_coverpage = True
 
# # Documents to append as an appendix to all manuals.
# #pdf_appendices = []
 
# # Enable experimental feature to split table cells. Use it
# # if you get "DelayedTable too big" errors
# #pdf_splittables = False
 
# # Set the default DPI for images
# #pdf_default_dpi = 72
 
# # Enable rst2pdf extension modules (default is only vectorpdf)
# # you need vectorpdf if you want to use sphinx's graphviz support
# #pdf_extensions = ['vectorpdf']
 
# # Page template name for "regular" pages
# #pdf_page_template = 'cutePage'
 
# # Show Table Of Contents at the beginning?
# # pdf_use_toc = False
 
# # How many levels deep should the table of contents be?
# pdf_toc_depth = 2
 
# # Add section number to section references
# pdf_use_numbered_links = False
 
# # Background images fitting mode
# pdf_fit_background_mode = 'scale'
